openapi: 3.0.0
paths: {}
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PEPE_2/Grapholscape_Model/1.0.0
info:
  description: This is a simple API
  version: 1.0.0
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
components:
  schemas:
    Model:
      type: object
      required:
        - entities
        - nodes
        - edges
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Node'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
    Element:
      type: object
      required:
        - id
        - displayedName
        - type
      properties:
        id:
          type: string
        originalId:
          type: string
          description: >-
            In case of replicated elements, this is the ID of the original
            element replicated in multiple occurrences, all of them with
            different IDs
        displayedName:
          type: string
        iri:
          type: string
        type:
          type: string
          oneOf:
            - $ref: '#/components/schemas/EntityTypeEnum'
            - $ref: '#/components/schemas/ConstructorTypeEnum'
            - $ref: '#/components/schemas/EdgeTypeEnum'
    Edge:
      type: object
      allOf:
        - $ref: '#/components/schemas/Element'
        - type: object
          required:
            - sourceId
            - targetId
          properties:
            sourceId:
              type: string
            targetId:
              type: string
            breakpoints:
              type: array
              items:
                $ref: '#/components/schemas/Position'
    Node:
      type: object
      required:
        - id
        - displayedName
        - type
      properties:
        id:
          type: string
        displayedName:
          type: string
        iri:
          type: string
        type:
          type: string
          oneOf:
            - $ref: '#/components/schemas/EntityTypeEnum'
            - $ref: '#/components/schemas/ConstructorTypeEnum'
        position:
          $ref: '#/components/schemas/Position'
    Entity:
      type: object
      required:
        - iri
        - type
      properties:
        iri:
          type: object
          properties:
            prefixed:
              type: string
            full:
              type: string
            remainder:
              type: string
            prefix:
              type: string
          example:
            prefixed: obda:Entity
            full: http://obda.com/Entity
            remainder: Entity
            prefix: obda
        type:
          $ref: '#/components/schemas/EntityTypeEnum'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
    Annotation:
      type: object
      required:
        - lexicalForm
        - property
      properties:
        lexicalForm:
          type: string
        property:
          type: string
          example: rdfs:label
        language:
          type: string
        datatype:
          type: string
    EntityTypeEnum:
      type: string
      enum:
        - class
        - object-property
        - data-property
        - individual
        - class-instance
    ConstructorTypeEnum:
      type: string
      enum:
        - union
        - disjoint-union
    EdgeTypeEnum:
      type: string
      enum:
        - subclass-of
        - equivalence
        - instance-of
    Position:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: number
        y:
          type: number
