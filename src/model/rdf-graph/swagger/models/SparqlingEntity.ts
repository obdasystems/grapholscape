/* tslint:disable */
/* eslint-disable */
/**
 * VKG API model
 * This is the API for managing virtual knowledge graphs VKGs. VKGs are  crwated by exploring the data through the interface and then saved through this API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@obdasystems.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SparqlingEntity
 */
export interface SparqlingEntity {
    /**
     * 
     * @type {string}
     * @memberof SparqlingEntity
     */
    type: SparqlingEntityTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SparqlingEntity
     */
    iri: string;
    /**
     * 
     * @type {string}
     * @memberof SparqlingEntity
     */
    prefixedIri: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof SparqlingEntity
     */
    labels?: { [key: string]: string; };
}

/**
* @export
* @enum {string}
*/
export enum SparqlingEntityTypeEnum {
    CLASS = 'class',
    OBJECT_PROPERTY = 'objectProperty',
    INVERSE_OBJECT_PROPERTY = 'inverseObjectProperty',
    DATA_PROPERTY = 'dataProperty',
    ANNOTATION = 'annotation'
}


/**
 * Check if a given object implements the SparqlingEntity interface.
 */
export function instanceOfSparqlingEntity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "iri" in value;
    isInstance = isInstance && "prefixedIri" in value;

    return isInstance;
}

export function SparqlingEntityFromJSON(json: any): SparqlingEntity {
    return SparqlingEntityFromJSONTyped(json, false);
}

export function SparqlingEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): SparqlingEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'iri': json['iri'],
        'prefixedIri': json['prefixedIri'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
    };
}

export function SparqlingEntityToJSON(value?: SparqlingEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'iri': value.iri,
        'prefixedIri': value.prefixedIri,
        'labels': value.labels,
    };
}

