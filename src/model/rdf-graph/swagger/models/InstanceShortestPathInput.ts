/* tslint:disable */
/* eslint-disable */
/**
 * Grapholscape API model
 * This is the API for retaining a Grapholscape\'s loaded ontology (or graph) in order to restart navigation from a previous state.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: obdasystems@info.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceShortestPathSource } from './InstanceShortestPathSource';
import {
    InstanceShortestPathSourceFromJSON,
    InstanceShortestPathSourceFromJSONTyped,
    InstanceShortestPathSourceToJSON,
} from './InstanceShortestPathSource';
import type { InstanceShortestPathTarget } from './InstanceShortestPathTarget';
import {
    InstanceShortestPathTargetFromJSON,
    InstanceShortestPathTargetFromJSONTyped,
    InstanceShortestPathTargetToJSON,
} from './InstanceShortestPathTarget';

/**
 * 
 * @export
 * @interface InstanceShortestPathInput
 */
export interface InstanceShortestPathInput {
    /**
     * 
     * @type {InstanceShortestPathSource}
     * @memberof InstanceShortestPathInput
     */
    source?: InstanceShortestPathSource;
    /**
     * 
     * @type {InstanceShortestPathTarget}
     * @memberof InstanceShortestPathInput
     */
    target?: InstanceShortestPathTarget;
}

/**
 * Check if a given object implements the InstanceShortestPathInput interface.
 */
export function instanceOfInstanceShortestPathInput(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InstanceShortestPathInputFromJSON(json: any): InstanceShortestPathInput {
    return InstanceShortestPathInputFromJSONTyped(json, false);
}

export function InstanceShortestPathInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceShortestPathInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': !exists(json, 'source') ? undefined : InstanceShortestPathSourceFromJSON(json['source']),
        'target': !exists(json, 'target') ? undefined : InstanceShortestPathTargetFromJSON(json['target']),
    };
}

export function InstanceShortestPathInputToJSON(value?: InstanceShortestPathInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': InstanceShortestPathSourceToJSON(value.source),
        'target': InstanceShortestPathTargetToJSON(value.target),
    };
}

