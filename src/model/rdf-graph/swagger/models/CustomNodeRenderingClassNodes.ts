/* tslint:disable */
/* eslint-disable */
/**
 * VKG API model
 * This is the API for managing virtual knowledge graphs VKGs. VKGs are  crwated by exploring the data through the interface and then saved through this API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@obdasystems.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomNodeRenderingClassNodes
 */
export interface CustomNodeRenderingClassNodes {
    /**
     * 
     * @type {number}
     * @memberof CustomNodeRenderingClassNodes
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomNodeRenderingClassNodes
     */
    color?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomNodeRenderingClassNodes
     */
    icon?: string;
}

/**
 * Check if a given object implements the CustomNodeRenderingClassNodes interface.
 */
export function instanceOfCustomNodeRenderingClassNodes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomNodeRenderingClassNodesFromJSON(json: any): CustomNodeRenderingClassNodes {
    return CustomNodeRenderingClassNodesFromJSONTyped(json, false);
}

export function CustomNodeRenderingClassNodesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomNodeRenderingClassNodes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'size': !exists(json, 'size') ? undefined : json['size'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
    };
}

export function CustomNodeRenderingClassNodesToJSON(value?: CustomNodeRenderingClassNodes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'size': value.size,
        'color': value.color,
        'icon': value.icon,
    };
}

