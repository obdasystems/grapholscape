/* tslint:disable */
/* eslint-disable */
/**
 * Grapholscape API model
 * This is the API for retaining a Grapholscape\'s loaded ontology (or graph) in order to restart navigation from a previous state.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: obdasystems@info.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Contiene tutti i tipi di nodi/archi orginirari dal Graphol per evitare di duplicare gli enumeratori. Nella rappresentazione Floaty/vkg vengono usati questi valori.
 * NODI class data-property class-instance (vkg) individual (floaty) union disjoint-union
 * ARCHI object-property instance-of input inclusion equivalence attribute-edge union disjoint-union complete-union complete-disjoint-union
 * @export
 * @enum {string}
 */
export enum TypesEnum {
    CLASS = 'class',
    OBJECT_PROPERTY = 'object-property',
    DATA_PROPERTY = 'data-property',
    INDIVIDUAL = 'individual',
    DOMAIN_RESTRICTION = 'domain-restriction',
    RANGE_RESTRICTION = 'range-restriction',
    UNION = 'union',
    COMPLETE_UNION = 'complete-union',
    DISJOINT_UNION = 'disjoint-union',
    COMPLETE_DISJOINT_UNION = 'complete-disjoint-union',
    COMPLEMENT = 'complement',
    INTERSECTION = 'intersection',
    ENUMERATION = 'enumeration',
    HAS_KEY = 'has-key',
    ROLE_INVERSE = 'role-inverse',
    ROLE_CHAIN = 'role-chain',
    DATATYPE_RESTRICTION = 'datatype-restriction',
    VALUE_DOMAIN = 'value-domain',
    PROPERTY_ASSERTION = 'property-assertion',
    LITERAL = 'literal',
    FACET = 'facet',
    NEUTRAL = 'neutral',
    VALUE = 'value',
    INCLUSION = 'inclusion',
    EQUIVALENCE = 'equivalence',
    INSTANCE_OF = 'instance-of',
    INPUT = 'input',
    SAME = 'same',
    DIFFERENT = 'different',
    MEMBERSHIP = 'membership',
    ATTRIBUTE_EDGE = 'attribute-edge'
}


export function TypesEnumFromJSON(json: any): TypesEnum {
    return TypesEnumFromJSONTyped(json, false);
}

export function TypesEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesEnum {
    return json as TypesEnum;
}

export function TypesEnumToJSON(value?: TypesEnum | null): any {
    return value as any;
}

