/* tslint:disable */
/* eslint-disable */
/**
 * Grapholscape API model
 * This is the API for retaining a Grapholscape\'s loaded ontology (or graph) in order to restart navigation from a previous state.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: obdasystems@info.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Theme
 */
export interface Theme {
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    name?: string;
    /**
     * 
     * @type {object}
     * @memberof Theme
     */
    colours?: object;
}

/**
 * Check if a given object implements the Theme interface.
 */
export function instanceOfTheme(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function ThemeFromJSON(json: any): Theme {
    return ThemeFromJSONTyped(json, false);
}

export function ThemeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Theme {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'colours': !exists(json, 'colours') ? undefined : json['colours'],
    };
}

export function ThemeToJSON(value?: Theme | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'colours': value.colours,
    };
}

