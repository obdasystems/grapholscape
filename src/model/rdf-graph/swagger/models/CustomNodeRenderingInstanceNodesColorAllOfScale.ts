/* tslint:disable */
/* eslint-disable */
/**
 * VKG API model
 * This is the API for managing virtual knowledge graphs VKGs. VKGs are  crwated by exploring the data through the interface and then saved through this API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@obdasystems.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomNodeRenderingInstanceNodesColorAllOfScale
 */
export interface CustomNodeRenderingInstanceNodesColorAllOfScale {
    /**
     * Color scale identifier for chroma.js (i.e "OrRd"), @see https://gka.github.io/chroma.js/#chroma-brewer
     * @type {string}
     * @memberof CustomNodeRenderingInstanceNodesColorAllOfScale
     */
    scaleID: string;
    /**
     * Custom scale intervals, to be used with chroma.js. @see https://gka.github.io/chroma.js/#scale-classes
     * @type {Array<number>}
     * @memberof CustomNodeRenderingInstanceNodesColorAllOfScale
     */
    intervals?: Array<number>;
}

/**
 * Check if a given object implements the CustomNodeRenderingInstanceNodesColorAllOfScale interface.
 */
export function instanceOfCustomNodeRenderingInstanceNodesColorAllOfScale(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "scaleID" in value;

    return isInstance;
}

export function CustomNodeRenderingInstanceNodesColorAllOfScaleFromJSON(json: any): CustomNodeRenderingInstanceNodesColorAllOfScale {
    return CustomNodeRenderingInstanceNodesColorAllOfScaleFromJSONTyped(json, false);
}

export function CustomNodeRenderingInstanceNodesColorAllOfScaleFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomNodeRenderingInstanceNodesColorAllOfScale {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'scaleID': json['scaleID'],
        'intervals': !exists(json, 'intervals') ? undefined : json['intervals'],
    };
}

export function CustomNodeRenderingInstanceNodesColorAllOfScaleToJSON(value?: CustomNodeRenderingInstanceNodesColorAllOfScale | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'scaleID': value.scaleID,
        'intervals': value.intervals,
    };
}

