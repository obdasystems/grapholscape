/* tslint:disable */
/* eslint-disable */
/**
 * VKG API model
 * This is the API for managing virtual knowledge graphs VKGs. VKGs are  crwated by exploring the data through the interface and then saved through this API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@obdasystems.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BasePropertyInfo } from './BasePropertyInfo';
import {
    BasePropertyInfoFromJSON,
    BasePropertyInfoFromJSONTyped,
    BasePropertyInfoToJSON,
} from './BasePropertyInfo';
import type { CustomNodeRenderingInstanceNodesColor } from './CustomNodeRenderingInstanceNodesColor';
import {
    CustomNodeRenderingInstanceNodesColorFromJSON,
    CustomNodeRenderingInstanceNodesColorFromJSONTyped,
    CustomNodeRenderingInstanceNodesColorToJSON,
} from './CustomNodeRenderingInstanceNodesColor';
import type { CustomNodeRenderingInstanceNodesCoordinates } from './CustomNodeRenderingInstanceNodesCoordinates';
import {
    CustomNodeRenderingInstanceNodesCoordinatesFromJSON,
    CustomNodeRenderingInstanceNodesCoordinatesFromJSONTyped,
    CustomNodeRenderingInstanceNodesCoordinatesToJSON,
} from './CustomNodeRenderingInstanceNodesCoordinates';
import type { CustomNodeRenderingInstanceNodesSize } from './CustomNodeRenderingInstanceNodesSize';
import {
    CustomNodeRenderingInstanceNodesSizeFromJSON,
    CustomNodeRenderingInstanceNodesSizeFromJSONTyped,
    CustomNodeRenderingInstanceNodesSizeToJSON,
} from './CustomNodeRenderingInstanceNodesSize';

/**
 * 
 * @export
 * @interface CustomNodeRenderingInstanceNodes
 */
export interface CustomNodeRenderingInstanceNodes {
    /**
     * 
     * @type {CustomNodeRenderingInstanceNodesSize}
     * @memberof CustomNodeRenderingInstanceNodes
     */
    size?: CustomNodeRenderingInstanceNodesSize;
    /**
     * 
     * @type {CustomNodeRenderingInstanceNodesColor}
     * @memberof CustomNodeRenderingInstanceNodes
     */
    color?: CustomNodeRenderingInstanceNodesColor;
    /**
     * 
     * @type {BasePropertyInfo}
     * @memberof CustomNodeRenderingInstanceNodes
     */
    icon?: BasePropertyInfo;
    /**
     * 
     * @type {BasePropertyInfo}
     * @memberof CustomNodeRenderingInstanceNodes
     */
    location?: BasePropertyInfo;
    /**
     * 
     * @type {CustomNodeRenderingInstanceNodesCoordinates}
     * @memberof CustomNodeRenderingInstanceNodes
     */
    coordinates?: CustomNodeRenderingInstanceNodesCoordinates;
}

/**
 * Check if a given object implements the CustomNodeRenderingInstanceNodes interface.
 */
export function instanceOfCustomNodeRenderingInstanceNodes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomNodeRenderingInstanceNodesFromJSON(json: any): CustomNodeRenderingInstanceNodes {
    return CustomNodeRenderingInstanceNodesFromJSONTyped(json, false);
}

export function CustomNodeRenderingInstanceNodesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomNodeRenderingInstanceNodes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'size': !exists(json, 'size') ? undefined : CustomNodeRenderingInstanceNodesSizeFromJSON(json['size']),
        'color': !exists(json, 'color') ? undefined : CustomNodeRenderingInstanceNodesColorFromJSON(json['color']),
        'icon': !exists(json, 'icon') ? undefined : BasePropertyInfoFromJSON(json['icon']),
        'location': !exists(json, 'location') ? undefined : BasePropertyInfoFromJSON(json['location']),
        'coordinates': !exists(json, 'coordinates') ? undefined : CustomNodeRenderingInstanceNodesCoordinatesFromJSON(json['coordinates']),
    };
}

export function CustomNodeRenderingInstanceNodesToJSON(value?: CustomNodeRenderingInstanceNodes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'size': CustomNodeRenderingInstanceNodesSizeToJSON(value.size),
        'color': CustomNodeRenderingInstanceNodesColorToJSON(value.color),
        'icon': BasePropertyInfoToJSON(value.icon),
        'location': BasePropertyInfoToJSON(value.location),
        'coordinates': CustomNodeRenderingInstanceNodesCoordinatesToJSON(value.coordinates),
    };
}

