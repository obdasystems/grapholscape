/* tslint:disable */
/* eslint-disable */
/**
 * VKG API model
 * This is the API for managing virtual knowledge graphs VKGs. VKGs are  crwated by exploring the data through the interface and then saved through this API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@obdasystems.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GrapholscapeEntity } from './GrapholscapeEntity';
import {
    GrapholscapeEntityFromJSON,
    GrapholscapeEntityFromJSONTyped,
    GrapholscapeEntityToJSON,
} from './GrapholscapeEntity';

/**
 * 
 * @export
 * @interface HierarchySuperclassesInner
 */
export interface HierarchySuperclassesInner {
    /**
     * 
     * @type {GrapholscapeEntity}
     * @memberof HierarchySuperclassesInner
     */
    classEntity: GrapholscapeEntity;
    /**
     * 
     * @type {boolean}
     * @memberof HierarchySuperclassesInner
     */
    complete: boolean;
}

/**
 * Check if a given object implements the HierarchySuperclassesInner interface.
 */
export function instanceOfHierarchySuperclassesInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "classEntity" in value;
    isInstance = isInstance && "complete" in value;

    return isInstance;
}

export function HierarchySuperclassesInnerFromJSON(json: any): HierarchySuperclassesInner {
    return HierarchySuperclassesInnerFromJSONTyped(json, false);
}

export function HierarchySuperclassesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): HierarchySuperclassesInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'classEntity': GrapholscapeEntityFromJSON(json['classEntity']),
        'complete': json['complete'],
    };
}

export function HierarchySuperclassesInnerToJSON(value?: HierarchySuperclassesInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'classEntity': GrapholscapeEntityToJSON(value.classEntity),
        'complete': value.complete,
    };
}

