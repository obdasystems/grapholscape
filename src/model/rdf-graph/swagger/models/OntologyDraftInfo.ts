/* tslint:disable */
/* eslint-disable */
/**
 * Grapholscape API model
 * This is the API for retaining a Grapholscape\'s loaded ontology (or graph) in order to restart navigation from a previous state.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: obdasystems@info.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OntologyDraftInfo
 */
export interface OntologyDraftInfo {
    /**
     * 
     * @type {string}
     * @memberof OntologyDraftInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof OntologyDraftInfo
     */
    iri?: string;
    /**
     * 
     * @type {string}
     * @memberof OntologyDraftInfo
     */
    version?: string;
    /**
     * 
     * @type {number}
     * @memberof OntologyDraftInfo
     */
    lastModification?: number;
}

/**
 * Check if a given object implements the OntologyDraftInfo interface.
 */
export function instanceOfOntologyDraftInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OntologyDraftInfoFromJSON(json: any): OntologyDraftInfo {
    return OntologyDraftInfoFromJSONTyped(json, false);
}

export function OntologyDraftInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OntologyDraftInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'iri': !exists(json, 'iri') ? undefined : json['iri'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'lastModification': !exists(json, 'lastModification') ? undefined : json['lastModification'],
    };
}

export function OntologyDraftInfoToJSON(value?: OntologyDraftInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'iri': value.iri,
        'version': value.version,
        'lastModification': value.lastModification,
    };
}

