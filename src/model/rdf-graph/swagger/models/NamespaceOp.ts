/* tslint:disable */
/* eslint-disable */
/**
 * Grapholscape API model
 * This is the API for retaining a Grapholscape\'s loaded ontology (or graph) in order to restart navigation from a previous state.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: obdasystems@info.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Namespace } from './Namespace';
import {
    NamespaceFromJSON,
    NamespaceFromJSONTyped,
    NamespaceToJSON,
} from './Namespace';

/**
 * 
 * @export
 * @interface NamespaceOp
 */
export interface NamespaceOp {
    /**
     * 
     * @type {Namespace}
     * @memberof NamespaceOp
     */
    subject: Namespace;
    /**
     * 
     * @type {Namespace}
     * @memberof NamespaceOp
     */
    previousState?: Namespace;
}

/**
 * Check if a given object implements the NamespaceOp interface.
 */
export function instanceOfNamespaceOp(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "subject" in value;

    return isInstance;
}

export function NamespaceOpFromJSON(json: any): NamespaceOp {
    return NamespaceOpFromJSONTyped(json, false);
}

export function NamespaceOpFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespaceOp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'subject': NamespaceFromJSON(json['subject']),
        'previousState': !exists(json, 'previousState') ? undefined : NamespaceFromJSON(json['previousState']),
    };
}

export function NamespaceOpToJSON(value?: NamespaceOp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'subject': NamespaceToJSON(value.subject),
        'previousState': NamespaceToJSON(value.previousState),
    };
}

