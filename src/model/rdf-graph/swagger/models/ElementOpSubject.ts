/* tslint:disable */
/* eslint-disable */
/**
 * Grapholscape API model
 * This is the API for retaining a Grapholscape\'s loaded ontology (or graph) in order to restart navigation from a previous state.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: obdasystems@info.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    Edge,
    instanceOfEdge,
    EdgeFromJSON,
    EdgeFromJSONTyped,
    EdgeToJSON,
} from './Edge';
import {
    Hierarchy,
    instanceOfHierarchy,
    HierarchyFromJSON,
    HierarchyFromJSONTyped,
    HierarchyToJSON,
} from './Hierarchy';
import {
    Node,
    instanceOfNode,
    NodeFromJSON,
    NodeFromJSONTyped,
    NodeToJSON,
} from './Node';

/**
 * @type ElementOpSubject
 * 
 * @export
 */
export type ElementOpSubject = Edge | Hierarchy | Node;

export function ElementOpSubjectFromJSON(json: any): ElementOpSubject {
    return ElementOpSubjectFromJSONTyped(json, false);
}

export function ElementOpSubjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): ElementOpSubject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...EdgeFromJSONTyped(json, true), ...HierarchyFromJSONTyped(json, true), ...NodeFromJSONTyped(json, true) };
}

export function ElementOpSubjectToJSON(value?: ElementOpSubject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfEdge(value)) {
        return EdgeToJSON(value as Edge);
    }
    if (instanceOfHierarchy(value)) {
        return HierarchyToJSON(value as Hierarchy);
    }
    if (instanceOfNode(value)) {
        return NodeToJSON(value as Node);
    }

    return {};
}

